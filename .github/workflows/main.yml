name: macOS GUI (Temporary VNC)

on:
  workflow_dispatch:

jobs:
  mac:
    runs-on: macos-14
    timeout-minutes: 360
    steps:
      - name: Runner info
        shell: bash
        run: |
          sw_vers
          whoami
          echo "Home: $HOME"

      - name: Install ngrok
        shell: bash
        run: |
          brew update
          brew install --cask ngrok

      - name: Auth ngrok
        shell: bash
        env:
          NGROK_AUTHTOKEN: ${{ secrets.NGROK_AUTHTOKEN }}
        run: |
          ngrok config add-authtoken "$NGROK_AUTHTOKEN"

      - name: Enable Screen Sharing (VNC) and set password
        shell: bash
        env:
          VNC_PASSWORD: ${{ secrets.VNC_PASSWORD }}
        run: |
          set -euxo pipefail

          # Enable Remote Management + VNC legacy with password
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \
            -activate -configure -access -on \
            -clientopts -setvnclegacy -vnclegacy yes \
            -clientopts -setmenuextra -menuextra yes \
            -configure -allowAccessFor -allUsers -privs -all

          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart \
            -configure -clientopts -setvncpw -vncpw "$VNC_PASSWORD"

          # Ensure the Screen Sharing service is running (port 5900)
          sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.screensharing.plist || true
          sudo /System/Library/CoreServices/RemoteManagement/ARDAgent.app/Contents/Resources/kickstart -restart -agent

      - name: Start ngrok TCP tunnel to 5900
        shell: bash
        run: |
          # Start ngrok in the background
          nohup ngrok tcp 5900 --log stdout > ngrok.log 2>&1 &

          # Wait for the local ngrok API to be ready
          for i in {1..30}; do
            if curl -s http://127.0.0.1:4040/api/tunnels >/dev/null 2>&1; then
              break
            fi
            sleep 1
          done

          # Extract the tcp public_url without using heredocs
          TUNNEL=$(curl -s http://127.0.0.1:4040/api/tunnels | /usr/bin/python3 -c "import sys,json; d=json.load(sys.stdin); print(next((t['public_url'] for t in d.get('tunnels',[]) if t.get('proto')=='tcp'),''))")
          echo "TUNNEL=$TUNNEL" | tee -a "$GITHUB_ENV"

          echo "### VNC Connection" >> "$GITHUB_STEP_SUMMARY"
          echo "- Address: **$TUNNEL**" >> "$GITHUB_STEP_SUMMARY"
          echo "- Password: **(your VNC_PASSWORD secret)**" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "> Use a VNC client (e.g., RealVNC Viewer) and paste the address exactly."

      - name: Keep alive up to 6 hours
        shell: bash
        run: |
          echo "Tunnel: $TUNNEL"
          # 6 hours = 21600 seconds
          i=0
          while [ $i -lt 21600 ]; do
            i=$((i+60))
            sleep 60
            echo "alive $i s"
          done
